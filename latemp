#!/usr/bin/env bash

# This is the directory in which to store the template files
# CHANGE THIS IS YOU WANT ANOTHER DIRECTORY FOR YOUR TEMPLATES
templateDirectory=~/Documents/latextemplates

# Declare program to open
# If a GUI program such as TeXstudio or Texmaker is chosen, no pdfviewer will be opened since they are build in
# CHANGE THESE IF YOU WANT TO USE A DIFFERENT EDITOR/PDFVIEWER
editor="vim"
pdfViewer="mupdf"

# Check if the $editor is terminalbased.
# If you have a terminalbased editor not on the list, just add it.
case $editor in
	vim|emacs|nano) terminalBasedEditor=1 ;;
	*) terminalBasedEditor=0 ;;
esac

n=0
# Populate template dictionary
for filePath in $templateDirectory/*.tex;
do
	# Strip the file extension
	pathToBase=${filePath%.tex}

	# Name of the whole file, ##*/ removes everything up to the last /
	name=${filePath##*/}
	# Removes the trailing .tex
	base=${name%.tex}

	# Save file path with the key of template name
	# If on old bash, make a normal array to where separation between key and value will be ::
	templateBase[$n]=$base
	templatePathToBase[$n]=$pathToBase

	# If value entered was found, remember which template
	if  [ $1 == ${base} ]; then
		indexOfTemplate=$n
	fi
	n=$((n+1))
done

function printOptions {
	echo "--- Example usage ---"
	echo
	echo "  - Open a copy of templateName in your current directory - "
	echo "	\$ latemp templateName"
	echo
	echo "--- Available templates ---"
	echo
	# Extract available templates and their file location
	N=${#templateBase[@]}
	for n in $(seq 0 $((N-1)));
	do
		echo "${templateBase[n]}, - File location: ${templatePathToBase[n]}.tex"
	done
	echo
	echo "--- Current settings ---"
	echo
	echo "Linux editor: $editor"
	echo "Linux pdf viewer: $pdfViewer"
	echo
	echo "Mac editor: $editor"
	echo
	echo "Directory for storing latex templates: $templateDirectory"
	echo
	echo "Change these by editing the latemp source file"
	echo
	exit 0
}

# If no input, print options
if [ $# == 0 ]; then
	printOptions
fi


# If templateBase contains the given template, set templateAvailable=1, else 0
[[ " ${templateBase[@]} " =~ " $1 " ]] && templateAvailable=1 || templateAvailable=0

# Check if input is an available template
if [ $templateAvailable ]; then
	currentDir="$(pwd)"

	pathToBasename=${templatePathToBase[$indexOfTemplate]}

	# Copy template to the current directory
	# If there is an already compiled pdf, copy that aswell
	# This only helps with an overview of the template
	if [ -f $pathToBasename.pdf ]; then
		cp $pathToBasename.* "$currentDir/"
	else
		cp $pathToBasename.tex "$currentDir/$1.tex"
	fi

	# Check if Mac or Linux and open appropriate editor
	if [ "$(uname)" == "Darwin" ]; then
		echo "--- Opening $editor ---"

		# Opens $pdfViewer if a pdf exists
		if [ -f $currentDir/$1.pdf ]; then
			$pdfViewer $currentDir/$1.pdf &
		fi

		if [ $terminalBasedEditor ]; then
			# Open $editor with output to current tty and input from current tty
			$editor $currentDir/$1.tex < `tty` > `tty`
		else
			# Open $editor from the Applications folder on mac
			open -a $editor $currentDir/$1.tex
		fi
	elif [ "$(uname)" == "Linux" ]; then
		echo "--- Opening $editor ---"
		# Opens $pdfViewer if a pdf exists
		if [ -f $currentDir/$1.pdf ]; then
			$pdfViewer $currentDir/$1.pdf &
		fi

		if [ $terminalBasedEditor ]; then
			# Open $editor with output to current tty and input from current tty
			$editor $currentDir/$1.tex < `tty` > `tty`
		else
			$editor $currentDir/$1.tex
		fi
	fi
else
	echo "Input didn't correspond to any available templates"
	echo "You might not have a ~/latextemplates folder"
	echo "Or you might not have that template in the  ~/latextemplates folder"
	echo
	printOptions
fi
